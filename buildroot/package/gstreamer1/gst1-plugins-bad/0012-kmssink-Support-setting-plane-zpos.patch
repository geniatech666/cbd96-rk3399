From af26838f40d109eb3f960ecf6b46939287be2908 Mon Sep 17 00:00:00 2001
From: Jeffy Chen <jeffy.chen@rock-chips.com>
Date: Wed, 26 Dec 2018 21:24:37 +0800
Subject: [PATCH] kmssink: Support setting plane zpos

Using min zpos when attached to window by default.
Set env KMSSINK_PLANE_ZPOS to specify plane zpos.
Set env KMSSINK_PLANE_ON_TOP to force max zpos

Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
---
 sys/kms/gstkmssink.c | 74 +++++++++++++++++++++++++++++++++++++++++++++++++++-
 sys/kms/gstkmssink.h |  2 ++
 2 files changed, 75 insertions(+), 1 deletion(-)

diff --git a/sys/kms/gstkmssink.c b/sys/kms/gstkmssink.c
index 3402ec5..f63501b 100755
--- a/sys/kms/gstkmssink.c
+++ b/sys/kms/gstkmssink.c
@@ -47,6 +47,7 @@
 #include <gst/allocators/gstdmabuf.h>
 
 #include <fcntl.h>
+#include <stdlib.h>
 #include <string.h>
 
 #include "gstkmssink.h"
@@ -153,10 +154,21 @@ gst_kms_sink_expose (GstVideoOverlay * overlay)
 }
 
 static void
+gst_kms_sink_set_window_handle (GstVideoOverlay * overlay, guintptr handle)
+{
+  GstKMSSink *self = GST_KMS_SINK (overlay);
+
+  g_return_if_fail (self != NULL);
+
+  self->window_handle = handle;
+}
+
+static void
 gst_kms_sink_video_overlay_init (GstVideoOverlayInterface * iface)
 {
   iface->expose = gst_kms_sink_expose;
   iface->set_render_rectangle = gst_kms_sink_set_render_rectangle;
+  iface->set_window_handle = gst_kms_sink_set_window_handle;
 }
 
 static int
@@ -1414,6 +1426,64 @@ done:
   return buf;
 }
 
+static void
+configure_plane_zpos (GstKMSSink * self)
+{
+  drmModeObjectPropertiesPtr props = NULL;
+  drmModePropertyPtr prop = NULL;
+  drmModeResPtr res = NULL;
+  gchar *buf;
+  int i;
+  guint64 min, max, zpos;
+
+  if (self->plane_id <= 0)
+    return;
+
+  if (drmSetClientCap (self->fd, DRM_CLIENT_CAP_ATOMIC, 1))
+    return;
+
+  res = drmModeGetResources (self->fd);
+  if (!res)
+    return;
+
+  props = drmModeObjectGetProperties (self->fd, self->plane_id,
+      DRM_MODE_OBJECT_PLANE);
+  if (!props)
+    goto out;
+
+  for (i = 0; i < props->count_props; i++) {
+    prop = drmModeGetProperty (self->fd, props->props[i]);
+    if (prop && !strcmp (prop->name, "ZPOS"))
+      break;
+    drmModeFreeProperty (prop);
+    prop = NULL;
+  }
+
+  if (!prop)
+    goto out;
+
+  min = prop->values[0];
+  max = prop->values[1];
+
+  zpos = self->window_handle ? min : max;
+
+  buf = getenv ("KMSSINK_PLANE_ZPOS");
+  if (buf)
+    zpos = atoi (buf);
+  else if (getenv ("KMSSINK_PLANE_ON_TOP"))
+    zpos = max;
+
+  GST_INFO_OBJECT (self, "set plane zpos = %lld (%lld~%lld)", zpos, min, max);
+
+  drmModeObjectSetProperty (self->fd, self->plane_id,
+      DRM_MODE_OBJECT_PLANE, props->props[i], zpos);
+
+out:
+  drmModeFreeProperty (prop);
+  drmModeFreeObjectProperties (props);
+  drmModeFreeResources (res);
+}
+
 static GstFlowReturn
 gst_kms_sink_show_frame (GstVideoSink * vsink, GstBuffer * buf)
 {
@@ -1431,8 +1501,10 @@ gst_kms_sink_show_frame (GstVideoSink * vsink, GstBuffer * buf)
 
   res = GST_FLOW_ERROR;
 
-  if (!self->last_buffer)
+  if (!self->last_buffer) {
     gst_video_overlay_prepare_window_handle (GST_VIDEO_OVERLAY (&self->videosink));
+    configure_plane_zpos (self);
+  }
 
   if (buf)
     buffer = gst_kms_sink_get_input_buffer (self, buf);
diff --git a/sys/kms/gstkmssink.h b/sys/kms/gstkmssink.h
index 4458cf9..53c6218 100755
--- a/sys/kms/gstkmssink.h
+++ b/sys/kms/gstkmssink.h
@@ -95,6 +95,8 @@ struct _GstKMSSink {
   gboolean reconfigure;
 
   drmModeCrtcPtr original_crtc;
+
+  guintptr window_handle;
 };
 
 struct _GstKMSSinkClass {
-- 
2.11.0

